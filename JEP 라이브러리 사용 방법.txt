JEP 모듈은 Microsoft Visual C++ 2019 컴파일러와 호환이 되지 않기 때문에 

전부 삭제한 후

Microsoft Visual C++ 2017 Build Tools를 다운받는다. (Microsoft Visual C++ Community를 이용해서 다운받으면 편함) 

그 후 

JEP 라이브러리 다운 받은 상태에서 
CMD로 JEP 라이브러리의 setup.py 경로로 들어가 
python setup.py build 
명령어 입력해서 build 폴더를 생성해준 후 

CMD(관리자로 접속) 에서

pip install jep

명령어 실행 

만약 mt.exe 응용프로그램을 찾을 수 없다는 에러가 뜬다면 

시스템 환경 변수 -> Path에 

C:\Program Files (x86)\Windows Kits\10\bin\10.0.17763.0\x86 

경로를 추가해준다.

pip show pip
pip show jep를 통해 

Location 확인 후

Jep jep = new Jep(false, 해당 Location); 으로 객체 생성 

no jep in java.library.path 에러가 뜰 경우 

시스템 환경 변수 -> Path에 

C:\Users\user\AppData\Local\Programs\Python\Python38\Lib\site-packages 와
C:\Users\user\AppData\Local\Programs\Python\Python38\Lib\site-packages\jep 를 추가한 후 재부팅

그래도 안될 경우 setup.py 를 통해 build 한 jep jar 말고 

pip install jep를 통해 생성된 jep jar를 프로젝트에 추가해준다. 



그 후 프로젝트를 run 하면 pandas, numpy 등등 외부 모듈이 정상적으로 import 되어지는 것을 확인할 수 있는데 

from ortools.linear_solver import pywraplp에서 문제가 생긴다. 

그럼 Microsoft Visual C++ 2019 Community 를 다운받아 2019 compiler가 생기게 되면 정상적으로 import가 가능해진다.
